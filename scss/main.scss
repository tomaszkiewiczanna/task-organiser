/*
animation-name: animationName;
    nazwa animacji


animation-duration: 1s;
    dlugosc animacji


animation-delay: 2s;
    poczatkowe opóźnienie animacji


animation-iteration-count: 3;
    liczba powtórzeń
        > i - określona liczba,
        > infinite - nieskonczone


animation-direction: alternate;
    kierunek animacji:
        > alternate - w te i wewte,
        > alternate-reverse - w te i wewte ale od tylu,
        > normal - normalne,
        > reverse - od tylu do przodu

animation-timing-function: ease-out;
    płynność animacji - https://developer.tizen.org/sites/default/files/users/user-2059/2-easing.png
        > ease,
        > ease-in,
        > ease-out,
        > ease-in-out,
        > linear,
        > steps(4) - przejście ma się wykonać w tylu krokach (skokowo)

animation-fill-mode: forwards;
    gdy animacja nie jest grana (delay lub koniec), zaaplikuj style z danego kierunku -
        > forwards - element zachowa style z ostatniej klatki,
        > backwards - element zachowa style z pierwszej klatki,
        > both - element zachowa style z pierwszej i ostatniej klatki,
        > none

animation-play-state: paused;
    opcjonalne - czy zatrzymać czy włączyć granie animacji
        > running - czy ruszyć animację,
        > paused - czy zatrzymać na chwilę animację, czy nie (np. na :hover)



//skrócony zapis - przykłady:
-----------------------------
animation: animationName 1s 2s 3 alternate forwards;
animation: animationName 1s 0s;
animation: animationName 1s 0s infinite ease-in-out;

//do pojedynczego elementu możemy dodawać wiele animacji po przecinku
animation: animationName 1s 0s, animation2Name 2s 1s alternate;
-----------------------------
*/
body {
    margin: 0;
}
.test {
    height: 50vh;
    display: flex;
    justify-content: center;
    align-items: center;
}
.test0 {
    background: #eee;
    height: 80vh;
    overflow: hidden;
    div {
        background-image: url(https://images.pexels.com/photos/955463/pexels-photo-955463.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940);
        background-size: cover;
        background-attachment: fixed;
        width: 100%;
        height: 100%;
        transform-origin: 50% 100%;
    }
}

.test1{
    background: #584343;

    button{
        border: 2px solid crimson;
        color: crimson;
        padding: 20px 80px;
        border-radius: 50px;
        background: none;
        text-transform: uppercase;
        font-weight: bold;
        transition: 1s;
    }
    button:hover{
        transform: scale(1.2);
        box-shadow: inset 0 0 0 60px crimson, 0 0 0 5px rgba(crimson, 0.4);
        color: white;
    }
}

.test2{
    background: orangered;
    .loading{
        width: 40px;
        height: 40px;
        border: 3px solid rgba(#fff, 0.4);
        border-radius: 50%;
        border-right-color: white;
        animation: test2Anim 0.8s 0s infinite linear;
    }
}
@keyframes test2Anim {
    100% {
        transform: rotate(360deg);
    }
}

.test3 {
    background: orange;

    .loading{
        width: 120px;
        height: 120px;
        position: relative;
        animation: test3Anim  1s 0s infinite alternate ease-in-out;

        &:after{
            content: '';
            display: block;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: white;
            position: absolute;
            right: -10px;
            top: calc(50% - 10px);
            animation: test3AnimDot  1s 0s infinite alternate ease-in-out;
        }
    }
}
@keyframes test3Anim {
    100% {
        transform: rotate(-180deg);
    }
}
@keyframes test3AnimDot {
    0% {
        transform: scale(1, 0.5);
    }
    50% {
        transform: scale(0.5, 1);
    }
    100% {
        transform: scale(1, 0.5);
    }
}

.test4 {
    background: darkcyan;

    .loading{
        width: 150px;
        height: 90px;
        display: flex;

        span{
            background: white;
            flex-grow: 1;
            margin: 2px;
            animation: test4BarAnim 1s 0s infinite alternate;
            transform-origin: 50% 100%;

            @for $i from 1 through 10 {
                &:nth-of-type(#{$i}) {
                    animation-delay: ($i * 0.2) * 1s;
                }

            }
        }
    }
}
@keyframes test4BarAnim {
    100% {
        transform: scaleY(0);
    }
}

.test5 {
    background: gold;

    .nav-toggle {
        width: 80px;
        height: 80px;
        background: none;
        position: relative;
        border:0;
        outline:none;

        span {
            background: #fff;
            height:8px;
            width: 50px;
            display: block;
            border-radius: 2px;
            position: absolute;
            left:50%;
            top:50%;
            transform: translate(-50%, -50%);
        }
        span:nth-of-type(2) {
            margin-top:-10px;
        }
        span:nth-of-type(3) {
            margin-top:10px;
        }
    }

    .nav-toggle.anim {
        span:nth-of-type(1) {
            animation: animSpan1 0.3s 0.5s 1 forwards;
        }
        span:nth-of-type(2) {
            animation: animSpan2 1s 0s 1 forwards;
        }
        span:nth-of-type(3) {
            animation: animSpan3 1s 0s 1 forwards;
        }
    }
}

@keyframes animSpan1 {
    100% {
        opacity: 0;
    }
}

@keyframes animSpan2 {
    50% {
        margin-top:0;
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        margin-top:0;
        transform: translate(-50%, -50%) rotate(45deg);
    }
}

@keyframes animSpan3 {
    50% {
        margin-top:0;
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        margin-top:0;
        transform: translate(-50%, -50%) rotate(-45deg);
    }
}